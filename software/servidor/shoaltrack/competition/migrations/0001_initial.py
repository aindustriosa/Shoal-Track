# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-06-23 10:33
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
        ('devices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='nombre')),
                ('slug', models.SlugField(unique=True)),
                ('edicion', models.SmallIntegerField(default=1, verbose_name='numero de edición')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='descripción')),
                ('timestamp_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='fecha de inicio')),
                ('timestamp_finish', models.DateTimeField(blank=True, null=True, verbose_name='fecha de finalización')),
                ('status', models.SmallIntegerField(choices=[(0, 'propuesta'), (1, 'diseño'), (2, 'abierta'), (3, 'instrucciones'), (4, 'esperando'), (5, 'lanzamiento'), (6, 'comenzando'), (7, 'en curso'), (8, 'terminando'), (9, 'finalizada'), (10, 'deliberacion'), (11, 'premios'), (12, 'cerrada')], default=0, verbose_name='estado del campeonato')),
                ('image', models.ImageField(blank=True, default='media/uploads/test_images/noimage.png', null=True, upload_to='media/uploads/images/competition/', verbose_name='imagen')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Organization', verbose_name='organizador')),
            ],
            options={
                'verbose_name': 'campeonato',
                'verbose_name_plural': 'campeonatos',
                'db_table': 'chp_champion',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ListTraceRaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, verbose_name='¿esta operativa?')),
                ('order', models.SmallIntegerField(default=1, verbose_name='orden de posición')),
                ('champion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.Champion', verbose_name='competición')),
            ],
            options={
                'verbose_name': 'listado de carreras en campeonato',
                'verbose_name_plural': 'listados de carreras en campeonatos',
                'db_table': 'chp_listrace',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='nombre')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='descripción')),
                ('unit_type', models.SmallIntegerField(choices=[(0, 'segundos a la salida'), (1, 'segundos al final'), (2, 'posiciones al final'), (3, 'posicones a la salida'), (4, 'paso por boxes'), (5, 'parada'), (6, 'descalificado')], default=1, verbose_name='tipo de penalización')),
            ],
            options={
                'verbose_name': 'penalización',
                'verbose_name_plural': 'penalizaciones',
                'db_table': 'chp_penalty',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PenaltyTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.SmallIntegerField(default=1, verbose_name='unidades de penalización')),
                ('timestamp_pass', models.DateTimeField(default=django.utils.timezone.now, verbose_name='tiempo de control')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='descripción')),
                ('penalty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.Penalty', verbose_name='referencia de penalización')),
            ],
            options={
                'verbose_name': 'monitorización de la penalización en la carrera',
                'verbose_name_plural': 'monitorización de las penalizaciones en las carreras',
                'db_table': 'chp_trackingpenalty',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='nombre')),
                ('edicion', models.SmallIntegerField(default=1, verbose_name='numero de edición')),
                ('slug', models.SlugField(unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='descripción')),
                ('timestamp_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='fecha de inicio')),
                ('timestamp_finish', models.DateTimeField(blank=True, null=True, verbose_name='fecha de finalización')),
                ('status', models.SmallIntegerField(choices=[(0, 'abortada'), (1, 'propuesta'), (2, 'diseño'), (3, 'abierta'), (4, 'instrucciones'), (5, 'esperando'), (6, 'lanzamiento'), (7, 'comenzando'), (8, 'en curso'), (9, 'terminando'), (10, 'finalizada'), (11, 'deliberacion'), (12, 'premios'), (13, 'cerrada')], default=1, verbose_name='estado de la carrera')),
                ('limit_area', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=32629, verbose_name='limites de la zona de carrera')),
                ('image', models.ImageField(blank=True, default='test_images/noimage.jpg', null=True, upload_to='uploads/images/competition/', verbose_name='imagen')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Organization', verbose_name='organizador')),
            ],
            options={
                'verbose_name': 'carrera',
                'verbose_name_plural': 'carreras',
                'db_table': 'chp_race',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RaceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='nombre')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='codigo')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='descripción')),
            ],
            options={
                'verbose_name': 'categoría del participante',
                'verbose_name_plural': 'categorías de participantes',
                'db_table': 'chp_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RaceTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, verbose_name='nombre')),
                ('color', models.SmallIntegerField(choices=[(0, 'azul_claro'), (1, 'azul_oscuro'), (2, 'verde_claro'), (3, 'verde_oscuro'), (4, 'rosa'), (5, 'rojo'), (6, 'naranja_claro'), (7, 'naranja_oscuro'), (8, 'violeta'), (9, 'morado'), (10, 'amarillo'), (11, 'blanco')], default=5, verbose_name='codigo de color')),
                ('points', models.FloatField(null=True, verbose_name='puntuacion')),
                ('timestamp_integrate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='fecha de inicio')),
                ('timestamp_exit', models.DateTimeField(blank=True, null=True, verbose_name='fecha de salida')),
                ('observations', models.CharField(blank=True, max_length=255, null=True, verbose_name='observaciones')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='competition.RaceCategory', verbose_name='categoría')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device', verbose_name='participante')),
            ],
            options={
                'verbose_name': 'monitorización de la carrera',
                'verbose_name_plural': 'monitorización de las carreras',
                'db_table': 'chp_racetrack',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RaceTrackingNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_pass', models.DateTimeField(default=django.utils.timezone.now, verbose_name='tiempo de control')),
                ('racetracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.RaceTracking', verbose_name='Tracking de dispositivo')),
            ],
            options={
                'verbose_name': 'validacion de marcadores en la carrera',
                'verbose_name_plural': 'validaciones de marcadores en las carreras',
                'db_table': 'chp_trackingnode',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrackGeom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_enable', models.DateTimeField(default=django.utils.timezone.now, verbose_name='agregado desde')),
                ('track_pass', models.SmallIntegerField(choices=[(0, 'comienzo por derechas'), (1, 'comienzo por izquierdas'), (2, 'fin por derechas'), (3, 'fin por izquierdas'), (4, 'cerca'), (5, 'por debajo'), (6, 'giro a derechas'), (7, 'giro a izquierdas'), (8, 'tocar'), (11, 'atravesar Norte'), (12, 'atravesar NoroEste'), (13, 'atravesar Este'), (14, 'atravesar SurEste'), (15, 'atravesar Sur'), (16, 'atravesar SurOeste'), (17, 'atravesar Oeste'), (18, 'atravesar NorteOeste'), (200, 'informacion')], default=8, verbose_name='modo de paso')),
                ('timestamp_disable', models.DateTimeField(blank=True, null=True, verbose_name='retirado desde')),
                ('order', models.SmallIntegerField(default=1, verbose_name='número de orden')),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=32629, verbose_name='geometria 2D inicial')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device', verbose_name='dispositivo asociado')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.Race', verbose_name='competicion')),
            ],
            options={
                'verbose_name': 'marcador del trazado de la carrera',
                'verbose_name_plural': 'marcadores del trazado de la carrera',
                'db_table': 'chp_trackgeom',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='racetrackingnode',
            name='trackgeom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.TrackGeom', verbose_name='Marcador de referencia'),
        ),
        migrations.AddField(
            model_name='racetracking',
            name='geo_track',
            field=models.ManyToManyField(blank=True, through='competition.RaceTrackingNode', to='competition.TrackGeom', verbose_name='listado de tracking'),
        ),
        migrations.AddField(
            model_name='racetracking',
            name='penalty',
            field=models.ManyToManyField(blank=True, through='competition.PenaltyTracking', to='competition.Penalty', verbose_name='listado de penalizaciones'),
        ),
        migrations.AddField(
            model_name='racetracking',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.Race', verbose_name='carrera'),
        ),
        migrations.AddField(
            model_name='race',
            name='track',
            field=models.ManyToManyField(blank=True, through='competition.TrackGeom', to='devices.Device', verbose_name='configuración del trazado'),
        ),
        migrations.AddField(
            model_name='penaltytracking',
            name='racetracking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.RaceTracking', verbose_name='referencia de monitoreo'),
        ),
        migrations.AddField(
            model_name='listtraceraces',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.Race', verbose_name='carrera asociada'),
        ),
        migrations.AddField(
            model_name='champion',
            name='races',
            field=models.ManyToManyField(blank=True, through='competition.ListTraceRaces', to='competition.Race', verbose_name='lista de carreras'),
        ),
        migrations.AlterUniqueTogether(
            name='racetracking',
            unique_together=set([('device', 'race', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='champion',
            unique_together=set([('name', 'edicion')]),
        ),
    ]
